import AWS from 'aws-sdk' ;
// Opción 2: Usar credenciales estáticas en viarables de entorno
AWS.config.update({
    accessKeyId: process.env.AWS_ACCESS_KEY_ID,
    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,
    sessionToken:'IQoJb3JpZ2luX2VjEHUaCXVzLXdlc3QtMiJIMEYCIQDTpS6c6/b1Oqn5euKag7AzhLUdylR+ol0p6fEXBhgvSgIhAMFPS9ZBAUgC6wqq2bwyGQh4X6kgQwKf+BbwZKps2H/3KroCCB4QABoMODQyOTYxNTgxNzE5IgxF4MHuDn2LUUSyOeMqlwLxytk8olWwhVlHUPWKrqHf6uOGc1+lRDytg90hC7Oi02ySYKkYFYVdoL4FbOZJsN3Cql6/F1RZ68FUVhnRpoHyt5FpPO3dU6N+U/F7S+r4EKH7/Xm5THsriHKlCVhwNVV204ssUL5dzzjz4Xy4m7berR7VT/CUbi+ZrRcttkB9eW71+Kvtwr9Fpb4A/r4f9kl3BuWvzj9S1nbZe6sGN3nB86wSzPaLoW5w0+XCM4v1hRm0Kad/NOsbQurIs8s3Agg8yTPTibFQ9KtGYEmbTmrxKxL+UioqKUA4m2oG3+41L9Ldr2gueze6KUxq8pqNzlF5m76RKL+UgHwjATr/PNWFkwQo6qjqQJkTzeHwXBpgN2LOX9SersEwts+TugY6nAEOp+DcKss85kpOM9nR1l9vjfsQpP6rDCdTfahFAK5Fr+vYrLqVIJzn4KhUaYlWcMG8gek2sms8bLBw/XXg7TGsBiYSYOLpLBSTr2buofUfyTXMJ634aZSVSteKQvo3vhqsq/R1ONxLrrc9dXEqIOc6jr4yBjquxUSIcpq9yZsQQHIh73FKa/beDVKh3oCom3Srk9v/BdyGHtpLF6s=',
    region: process.env.AWS_REGION,
});


// Crear el cliente de EventBridge
const eventBridge = new AWS.EventBridge();

async function sendTestEvent() {
  const params = {
    Entries: [
      {
        EventBusName: 'arn:aws:events:us-east-1:442042507897:event-bus/default',  // campo obligatorio
        Source: 'tickets-module',  // campo obligatorio
        DetailType: 'ticket.venta',  // campo obligatorio
        Detail: JSON.stringify({
          operation: "creation",
          idEntrada: "1a8e1ad1-fb87-46c9-88bf-81c1d9788439",
          idPago: "7d2aa6b4-0d28-4ed6-ad1a-9e43496d0dbe",
          idEvento: "14e08f0c-8d53-40e1-9fb8-1641620c6bc3",
          nombreEvento: "Concierto de Rock",
          fechaEvento: "2025-12-01",
          sector: "VIP",
          precioPago: 150.50,
          promotor: "Promotor XYZ",
          idUsuario: "1a8e1ad1-fb87-46c9-88bf-81c1d9788439"
        }),
      },
    ],
  };

  try {
    const response = await eventBridge.putEvents(params).promise();
    console.log('Evento enviado:', JSON.stringify(response, null, 2));

    response.Entries.forEach((entry) => {
      if (entry.EventId) {
        console.log(`Evento enviado exitosamente. Event ID: ${entry.EventId}`);
      } else {
        console.error(`Error al enviar evento: ${entry.ErrorCode} - ${entry.ErrorMessage}`);
      }
    });
  } catch (error) {
    console.error('Error al enviar evento:', error);
  }
}

export default sendTestEvent;